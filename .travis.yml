language: rust
sudo: false

INSTALL_NODE_VIA_NVM: &INSTALL_NODE_VIA_NVM
  - rustup target add wasm32-unknown-unknown
  - cargo +nightly install wasm-bindgen-cli
  - curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.8/install.sh | bash
  - source ~/.nvm/nvm.sh
  - nvm install v10.5

matrix:
  include:
    # Tests pass on nightly
    # TODO: Separate job for JSDOM WebAssembly tests and Rust unit tests
    - rust: nightly
      env: JOB=test-everything
      before_install: *INSTALL_NODE_VIA_NVM
      install:
        - npm install
      script:
        - ./test.sh
      if: branch = master
      # Here's how we can test our future CLI's on stable / nightly
      # https://github.com/rustwasm/wasm-bindgen/blob/f893e3475cc4b9d4641b290f1c2c74d752b7d368/.travis.yml#L127-L136

    # Build documentation for the gh-pages branch
    - rust: nightly
      env: JOB=book-build-and-deploy
      cache:
        directories:
          - $HOME/.cargo
      before_script:
        - (test -x $HOME/.cargo/bin/cargo-install-update || cargo install cargo-update)
        - (test -x $HOME/.cargo/bin/mdbook || cargo install --vers "^0.1" mdbook)
        - cargo install-update -a
      script:
        - (cd book && mdbook build)
        - cargo doc --no-deps -p virtual-dom-rs -p css-rs-macro
        - mv target/doc book/book/api
      deploy:
        provider: pages
        skip-cleanup: true
        github-token: $GITHUB_TOKEN  # Set in travis-ci.org dashboard, marked secure
        local-dir: book/book
        keep-history: false
      if: branch = master

    # Deploy the Percy demo application
    - rust: nightly
      name: "Deploy Demo"
      node_js: "10.5.0"
      env: JOB=deploy-demo
      cache:
        directories:
          - "node_modules"
      before_deploy:
        # Cross compile for `FROM scratch` image in Dockerfile since we were having trouble getting clux/muslrust working
        - rustup default nightly
        - rustup target add x86_64-unknown-linux-musl
        - curl -OL https://github.com/rust-embedded/cross/releases/download/v0.1.14/cross-v0.1.14-x86_64-unknown-linux-gnu.tar.gz
        - tar xf cross-v0.1.14-x86_64-unknown-linux-gnu.tar.gz
        - ./cross build -p isomorphic-server --release --target x86_64-unknown-linux-musl
        - ls target/release
        - ls target/x86_64-unknown-linux-musl
        # Now.sh
        - npm install -g now --no-save
      deploy:
        - provider: script
          script: now --token $NOW_TOKEN --public
          skip_cleanup: true
          on:
            all_branches: true
            master: false
        - provider: script
          script: now --token $NOW_TOKEN --public && now alias --token $NOW_TOKEN --public
          skip_cleanup: true
          on:
            master: true # TODO: if branch == master

notifications:
  email:
    on_success: never
